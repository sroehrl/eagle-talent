<?php
/* Generated by neoan3-cli */

namespace Neoan3\Components;

use Neoan3\Core\Serve;
use Neoan3\Core\Unicore;
use Neoan3\Apps\Session;
use Neoan3\Apps\Js;
use SleekDB\SleekDB;

class Talent extends Unicore {
    private $genderOptions   = '';
    private $languageOptions = '';

    function __construct() {
        new Header();
    }

    function init() {
        $this->uni('demo')
             ->addHead('title', 'Talent Gallery')
             ->callback($this, 'hideShow')
            /* ->includeElement('services')
             ->includeElement('neoan-accents')
             ->includeElement('talent')*/
             ->callback($this, 'navigation')
             ->callback($this, 'chooseView')
             ->hook(
                 'header', 'header',
                 ['genderOptions' => $this->genderOptions, 'languageOptions' => $this->languageOptions]
             )//             ->hook('main', 'talent', ['language' => $_SESSION['language'], 'gender' => $_SESSION['gender']])
             ->output();
    }

    /**
     * @param Serve $uni
     */
    function chooseView($uni) {
        $view = 'talent';
        if(sub(1)) {
            $view = 'view' . ucfirst(sub(1)) . 's';
            $uni->includeElement('services')
                ->includeElement('neoan-accents')
                ->includeElement('talent',['contentType'=>sub(1).'s']);
        }

        $uni->hook('main', $view, ['language' => $_SESSION['language'], 'gender' => $_SESSION['gender']]);
    }

    function hideShow($uni) {
        $uni->js .= Js::_()
                      ->select('.container')
                      ->then('container.style.visibility="hidden";{{next}}')
                      ->nfn('showAll')
                      ->then('setTimeout(()=>{container.style.visibility="visible"},0)')
                      ->next()
                      ->then('showAll()')
                      ->out();
    }


    /**
     *
     * @throws \Exception
     */
    function navigation($context) {
        $this->genderOptions = $this->genders();
        $this->languageOptions = $this->languages();

    }

    private function languages() {
        $languages = SleekDB::store('languages', path . '/asset/db');
        return $this->generateOptions('language', $languages->fetch());
    }

    private function genders() {
        $genders = ['male', 'female'];
        return $this->generateOptions('gender', $genders);
    }

    private function generateOptions($what, $options) {
        $res = '';
        foreach($options as $option) {
            if(is_array($option)) {
                $option = $option['name'];
            }
            $res .= '<option value="' . $option . '" ' . ($_SESSION[$what] == $option ? 'selected' : '') . '>' .
                    ucfirst($option) . '</option>';
        }
        return $res;
    }
}
